#!/usr/bin/bash


select command in "createDb" "connectDb" "dropDb" "listDb" "exit"
do
    case $command  in 
    "createDb")
        read -p "enter the name of the database : " dbname
        if [[ -e "$dbname" ]]
        then
        echo "the database is already exist"
        else
            if [[ ! "$dbname" =~ ^[a-zA-Z0-9_]+$ ]]
            then
            echo "Invalid database name. Only alphanumeric characters and underscores are allowed."
            continue
            else
            mkdir $dbname;
            echo "the database is created successfully"
            fi
        fi
        ;;
        "connectDb")
        read -p "enter the name of the database : " dbname
        if [[ -e "$dbname" ]]
        then
        cd $dbname;
        echo "you are connected to the database"
#----------------------------------------------------------------------------------------------------------
# Create Table
# - List Tables
# - Drop Table
# - Insert into Table
# - Select From Table
# - Delete From Table
# - Update Table
        select command in "createTable" "listTables" "dropTable" "insert" "select" "Delete_From_Table" "Update_Table" "exit"
        do
            case $command in
            "createTable")
                read -p "enter the name of the table : " tablename
                if [[ -e "$dbname/$tablename" ]]
                then
                echo "the table is already exist"
                else
                    if [[ ! "$tablename" =~ ^[a-zA-Z0-9_]+$ ]]
                        then
                        echo "Invalid table name. Only alphanumeric characters and underscores are allowed."
                        continue
                    else
                        read -p "enter the number of fields : " num_fields
                        if [[ ! "$num_fields" =~ ^[0-9]+$ ]]
                        then
                            echo "Invalid number of fields. Only numbers are allowed."
                            exit 1
                        fi
                        flag=0;
                        for ((i=1;i<=$num_fields;i++))
                        do
                            row="";
                            read -p "enter the name of field $i : " field_name
                            if [[ ! "$field_name" =~ ^[a-zA-Z0-9_]+$ ]]
                                then
                                    echo "Invalid field name. Only alphanumeric characters and underscores are allowed."
                                    continue
                            else
                                row+="$field_name:"
                            fi
                            read -p "enter the data_type of field $i (int/string) :" data_type
                            if [[ ! "$data_type" =~ ^(int|string)$ ]]
                                then
                                    echo "Invalid data type. Only int and string are allowed."
                                    continue
                            else
                                row+="$data_type"
                            fi
                            if [[ "$flag" -eq 0 ]]
                                then 
                                read -p "are you want add primary key (y/n) : " primary_key
                                    if [[ $primary_key =~ ^([Yy][Ee][Ss]|[Yy]) ]]
                                        then
                                        row+=":p_k" ;
                                        flag=1;
                                    fi
                            fi
                            echo "$row" >> ~/$dbname/$tablename.metadata;
                        done
                        touch $tablename
			echo "Current line: $row"
                        echo "the table is created successfully"
                    fi
                fi
                ;;
                "listTables")
                if [ "$(find "$path/$dbname" -mindepth 1 -maxdepth 1 -type f | wc -l)" -eq 0 ]; then
                    echo "No tables found."
                else
                    find "$path/$dbname" -mindepth 1 -maxdepth 1 -type f | cut -d'/' -f7
                fi
                ;;
                "dropTable")
                read -p "enter the name of the table : " tablename
                if [[ -e "$path/$dbname/$tablename" ]]
                then
                rm $path/$dbname/$tablename;
                echo "the table is deleted successfully"
                else
                echo "the table is not exist";
                fi
                ;;
                
                
              "insert")
		read -p "please Enter Table Name: " tablename
		
		if [[ -e $tablename ]]
		then 
			columnSize=$(wc -l $tablename.metadata | cut -d" " -f1)
			lineee=""
			for ((i=0;i<columnSize;i++))
			do

				line=$(sed -n "$((i+1))p" $tablename.metadata)
				colName=$(echo $line | cut -d: -f1)
				colType=$(echo $line | cut -d: -f2)
				colPkCheck=$(echo $line | cut -d: -f3)
				read -p "please enter value for col $colName: " val
				lineee+=$val:
				echo $colName $colType $colPkCheck
			done
			echo $lineee >> $tablename
			echo "Data is inserted"

		else
			echo table is not already exist
		fi
	;;
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                "select")
                read -p "enter the name of the table : " tablename
                if [[ -e "$path/$dbname/$tablename" ]]
                then
                cat $path/$dbname/$tablename;
                else
                echo "the table is not exist";
                fi
                ;;
                "Delete_From_Table")
                read -p "enter the name of the table : " tablename
                if [[ -e "$path/$dbname/$tablename" ]]
                then
                read -p "enter the row number :" rownum
                sed -i "$rownum"d $path/$dbname/$tablename;
                echo "the row is deleted successfully"
                else
                echo "the table is not exist";
                fi
                ;;
                "Update_Table")
                read -p "entr the name of the table : " tablename
                if [[ -e "$path/$dbname/$tablename" ]]
                then
                read -p "enter the row number : " rownum
                read -p "enter the field name : " fieldname 
                read -p "enter the new value : " newvalue
                sed -i "${rownum}s/[^,]*/$newvalue/" $path/$dbname/$tablename;
                echo "the row is updated successfully"
                else
                echo "the table is not exist";
                fi
                ;;
                "exit")
                echo "good by";
                break;
                ;;
                *)
                echo "invalid selection";
                ;;
            esac
        done

#------------------------------------------------------------------------------------------------------
        else
        echo "the database is not exist";
        fi
        ;;
        "dropDb")
        read -p "enter the name of the database : " dbname
        if [[ -e "$path/$dbname" ]]
        then
        rm -r $path/$dbname;
        echo "the database is deleted successfully"
        else
        echo "the database is not exist";
        fi
        ;;
        "listDb")
        if [ "$(find "$path" -mindepth 1 -maxdepth 1 -type d | wc -l)" -eq 0 ]; then
            echo "No databases found."
        else
            find "$path" -mindepth 1 -maxdepth 1 -type d | cut -d'/' -f6
        fi
        ;;
        "exit")
        echo "good by";
        break;
        ;;
        *)
        echo "invalid selection";
        ;;
    esac
done

